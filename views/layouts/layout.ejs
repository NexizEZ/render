<!DOCTYPE html>
<html>

<head>
  <title>EasyFrisch</title>
  <link rel="shortcut icon" href="/images/easyfrisch.ico" type="image/x-icon">

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <% /* If you want to discourage search engines from indexing this site, uncomment the following line: */%>
    <% /* <meta name="robots" content="noindex"> */%>


      <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

      <link href="search-filter.css" rel="stylesheet">
      <link rel="preconnect" href="https://fonts.googleapis.com">
      <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
      <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap" rel="stylesheet">
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
      <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">

      <!--STYLES-->
      <link rel="stylesheet" href="/dependencies/vuetify.min.css">
      <link rel="stylesheet" href="/styles/importer.css">
      <link rel="stylesheet" href="/styles/style.css">
      <!--STYLES END-->
</head>

<body>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
    crossorigin="anonymous"></script>
  <!--SCRIPTS-->
  <script src="/dependencies/sails.io.js"></script>
  <script src="/dependencies/vue.global.js"></script>
  <script src="/dependencies/vue-router.global.js"></script>
  <script src="/dependencies/vuetify.min.js"></script>
  <!--SCRIPTS END-->
  <header>
    <nav class="navbar navbar-expand-lg navbar-light">
      <div class="containerhightphone container-fluid">
        <a class="navbar-brand logosettings" href="/"><img class="logo" src="/images/zyro-image.png" alt="logo"></a>
        <a class="navbar-brand logosettings2" href="/"><img class="logo2" src="/images/logoName.png" alt="logo2"></a>
        <div class="navbar-brand buttondiv">
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
            aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
        </div>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav ms-auto mb-2 mb-lg-0 headerfontsize">
            <li>
              <a class="nav-link float-end" href="/" role="button" aria-expanded="false">
                Home
              </a>
            </li>
            <li>
              <a class="nav-link float-end" href="/order" role="button" aria-expanded="false">
                Shop
              </a>
            </li>
            <% if(req.me) { %>
              <li>
                <a class="nav-link float-end" href="/basket" role="button" aria-expanded="false">
                  Warenkorb
                </a>
              </li>
              <% } %>
                <!--
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle float-end" href="#" id="navbarDropdown" role="button"
                data-bs-toggle="dropdown" aria-expanded="false">
                Shop
              </a>
              <ul class="dropdown-menu float-end" aria-labelledby="navbarDropdown">
                <li><a class="dropdown-item" href="#">Unsere Produkte</a></li>
                <li>
                  <hr class="dropdown-divider">
                </li>
                <li><a class="dropdown-item" href="#">Lieferung</a></li>
              </ul>
              -->
                </li>
                <li>
                  <a class="nav-link float-end" href="/aboutus" role="button" aria-expanded="false">
                    Über uns
                  </a>
                </li>
                <% if(req.me) { %>
                  <li>
                    <a class="nav-link float-end" href="/account" role="button" aria-expanded="false">
                      Account
                    </a>
                  </li>
                  <li>
                    <a class="nav-link float-end" href="/logout" role="button" aria-expanded="false">
                      Logout
                    </a>
                  </li>
                  <% } else { %>
                    <li>
                      <a class="nav-link float-end" href="/login" role="button" aria-expanded="false">
                        Login/Registrieren
                      </a>
                    </li>
                    <% } %>
                      <% if (req.me && req.me.isSuperAdmin) { %>
                        <li>
                          <div class="dropdown">
                            <a class="dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                              aria-expanded="false">
                              Mittarbeitertools
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                              <li><a class="dropdown-item" href="/item">Edit Items</a></li>
                              <li><a class="dropdown-item" href="/category">Edit Categories</a></li>
                            </ul>
                          </div>
                        </li>
                        <% } %>
          </ul>
        </div>
      </div>
    </nav>

  </header>

  <%- body %>

    <footer>
      <div class="container-fluid nav-container">
        <div class="row align-items-center">
          <div class="col-12 col-md-6 text-center">
            <div class="contact">
              <div class="address">
                <div class="bakeryname">
                  <p>Bäckerei EasyFrisch</p>
                </div>
                <p>Brotstr. 27</p>
                <p>12345 Brotstadt</p>
              </div>
              <div class="kontakt">
                <p>Tel. +49 7531 23679</p>
                <p>E-Mail: info@easyfrisch-web.de</p>
              </div>
            </div>
          </div>
          <div class="col-12 col-md-6 text-center">
            <div class="impressum">
              <p><a href="#">Impressum</a></p>
              <p><a href="#">Datenschutzbestimmungen</a></p>
            </div>
          </div>
        </div>
      </div>
      </div>
    </footer>


    <!--
        Client-side Templatess
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like React, Vue.js, Angular, Ember, and Backbone
        require that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different view engine (handlebars, dust, pug/jade, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <!--TEMPLATES END-->


    <!--
        Server-side View Locals
        ========================

        Sometimes, it's convenient to get access to your server-side view locals from
        client-side JavaScript.  This can improve page load times, remove the need for
        extra AJAX requests, and make your client-side code easier to understand and
        to maintain.  Sails provides a simple mechanism for accessing dynamic view
        locals: the "exposeLocalsToBrowser()" view partial.

        For more information on using this built-in feature, see:
        https://sailsjs.com/docs/concepts/views/locals#?escaping-untrusted-data-using-exposelocalstobrowser

    -->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
</body>

</html>